@page "/"

<PageTitle>User Registration</PageTitle>

<h2>User Registration</h2>


<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="user.FirstName" />
    </div>

    <div>
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="user.LastName" />
    </div>

    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" />
    </div>

    <label>Select the profile(s) you want to fill out</label>
    <select @bind="profileType">
        <option value="" disabled selected>Select...</option>
        <option value="Mentor">Mentor</option>
        <option value="Mentee">Mentee</option>
        <option value="Both">Both (Mentor and Mentee)</option>
    </select>

    @if (profileType == ProfileType.Mentor || profileType == ProfileType.Both || profileType == ProfileType.Mentee)
    {
        <div class="forms-container">
            @if (profileType == ProfileType.Mentor || profileType == ProfileType.Both)
            {
                <div class="mentor-form">
                    <Sparc.Blossom.Template.MentorProfile.MentorForm MentorModel="@mentorModel" />
                </div>
            }

            @if (profileType == ProfileType.Mentee || profileType == ProfileType.Both)
            {
                <div class="mentee-form">
                    <Sparc.Blossom.Template.MenteeProfile.MenteeForm MenteeModel="@menteeModel" />
                </div>
            }
        </div>
    }

    <button type="submit" disabled="@string.IsNullOrEmpty(profileType.ToString())">Submit</button>
</EditForm>

@code {
    private User user = new User();
    private Mentor mentorModel = new Mentor();
    private Mentee menteeModel = new Mentee();

    public enum ProfileType
    {
        Mentor,
        Mentee,
        Both
    }

    private ProfileType? profileType;

    private bool isMentor => profileType == ProfileType.Mentor || profileType == ProfileType.Both;
    private bool isMentee => profileType == ProfileType.Mentee || profileType == ProfileType.Both;

    private async Task HandleValidSubmit()
    {
        await Api.Users.Create(user.FirstName, user.LastName, user.Email);

        if (profileType == ProfileType.Mentor || profileType == ProfileType.Both)
        {
            mentorModel.UserId = user.Id;
            await Api.Mentors.Create(mentorModel.UserId, mentorModel.Expertise, mentorModel.AvailableTimes);
        }

        if (profileType == ProfileType.Mentee || profileType == ProfileType.Both)
        {
            menteeModel.UserId = user.Id;
            await Api.Mentees.Create(menteeModel.UserId, menteeModel.Interests, menteeModel.PreferredTimes);
        }
        
        Nav.NavigateTo("/mentors");
    }
}


