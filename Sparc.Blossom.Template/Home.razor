@page "/"

<PageTitle>User Registration</PageTitle>

<h3>User Registration</h3>


<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="user.FirstName" />
    </div>

    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="user.LastName" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="user.Email" />
    </div>

    <h4>Select the profile(s) you want to fill out</h4>
    <div class="form-check">
        <InputRadio id="isMentor" class="form-check-input" @bind-Value="profileType" />
        <label class="form-check-label" for="isMentor">
            Mentor
        </label>
    </div>
    <div class="form-check">
        <InputRadio id="isMentee" class="form-check-input" @bind-Value="profileType" />
        <label class="form-check-label" for="isMentee">
            Mentee
        </label>
    </div>
    <div class="form-check">
        <InputRadio id="isBoth" class="form-check-input" @bind-Value="profileType" />
        <label class="form-check-label" for="isBoth">
            Both (Mentor and Mentee)
        </label>
    </div>

    @if (profileType == "Mentor" || profileType == "Both")
    {
        <MentorForm MentorModel="@mentorModel" />
    }

    @if (profileType == "Mentee" || profileType == "Both")
    {
        <MenteeForm MenteeModel="@menteeModel" />
    }    

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@inject NavigationManager Nav

@code {
    private Users.User user = new Users.User(string.Empty, string.Empty, string.Empty);
    private Mentors.Mentor mentorModel = new Mentors.Mentor(string.Empty, new List<string>(), new List<string>());
    private Mentees.Mentee menteeModel = new Mentees.Mentee(string.Empty, new List<string>(), new List<string>());

    private string profileType;

    private bool isMentor => profileType == "Mentor" || profileType == "Both";
    private bool isMentee => profileType == "Mentee" || profileType == "Both";

    private async Task HandleValidSubmit()
    {
        await Api.Users.Create(user.FirstName, user.LastName, user.Email);

        if (profileType == "Mentor" || profileType == "Both")
        {
            mentorModel.UserId = user.Id;
            await Api.Mentors.Create(mentorModel.UserId, mentorModel.Expertise, mentorModel.AvailableTimes);
        }

        if (profileType == "Mentee" || profileType == "Both")
        {
            menteeModel.UserId = user.Id;
            await Api.Mentees.Create(menteeModel.UserId, menteeModel.Interests, menteeModel.PreferredTimes);
        }
        
        Nav.NavigateTo("/mentors");
    }
}


