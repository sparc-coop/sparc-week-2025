<h4>Mentor Form</h4>

<EditForm Model="@mentorModel">
    <div>
        <label>Choose your area of expertise:</label>
        <div>
            @foreach (var expertise in ExpertiseOptions)
            {
                <div>
                    <input type="checkbox" id="@expertise" value="@expertise" @onchange="(e) => UpdateExpertise(e, expertise)"
                           checked="@mentorModel.Expertise.Contains(expertise)" />
                    <label for="@expertise">@expertise</label>
                </div>
            }
        </div>
    </div>

    <div>
        <label>Available Times:</label>
        <div>
            @foreach (var time in AvailableTimesOptions)
            {
                <div>
                    <input type="checkbox" id="@time" value="@time" @onchange="(e) => UpdateAvailableTimes(e, time)"
                           checked="@mentorModel.AvailableTimes.Contains(time)" />
                    <label for="@time">@time</label>
                </div>
            }
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public Mentor mentorModel { get; set; }

    private List<string> ExpertiseOptions = new()
    {
        "Software Development",
        "Project Management",
        "Leadership",
        "Marketing",
        "Design",
        "Finance"
    };
    private List<string> AvailableTimesOptions = new()
    {
        "Morning",
        "Afternoon",
        "Evening"
    };

    protected override void OnInitialized()
    {
        mentorModel.Expertise ??= new List<string>();
        mentorModel.AvailableTimes ??= new List<string>();
    }

    private void UpdateExpertise(ChangeEventArgs e, string expertise)
    {
        if (((bool)e.Value) && !mentorModel.Expertise.Contains(expertise))
        {
            mentorModel.Expertise.Add(expertise);
        }
        else if (!((bool)e.Value))
        {
            mentorModel.Expertise.Remove(expertise);
        }
    }

    private void UpdateAvailableTimes(ChangeEventArgs e, string time)
    {
        if (((bool)e.Value) && !mentorModel.AvailableTimes.Contains(time))
        {
            mentorModel.AvailableTimes.Add(time);
        }
        else if (!((bool)e.Value))
        {
            mentorModel.AvailableTimes.Remove(time);
        }
    }
}

