@page "/"

<PageTitle>User Registration</PageTitle>

<h3>User Registration</h3>


<EditForm Model="@user" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="user.FirstName" />
    </div>

    <div>
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="user.LastName" />
    </div>

    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" />
    </div>

    <h4>Select the profile(s) you want to fill out</h4>
    <InputRadioGroup @bind-Value="profileType" Name="ProfileType">
        <div>
            <InputRadio id="isMentor" Value="ProfileType.Mentor" />
            <label for="isMentor">
                Mentor
            </label>
        </div>
        <div>
            <InputRadio id="isMentee" Value="ProfileType.Mentee" />
            <label for="isMentee">
                Mentee
            </label>
        </div>
        <div>
            <InputRadio id="isBoth" Value="ProfileType.Both" />
            <label for="isBoth">
                Both (Mentor and Mentee)
            </label>
        </div>
    </InputRadioGroup>

    @if (profileType == ProfileType.Mentor || profileType == ProfileType.Both)
    {
        <Sparc.Blossom.Template.MentorProfile.MentorForm MentorModel="@mentorModel" />
    }

    @if (profileType == ProfileType.Mentee || profileType == ProfileType.Both)
    {
        <Sparc.Blossom.Template.MenteeProfile.MenteeForm MenteeModel="@menteeModel" />
    }    

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@inject NavigationManager Nav

@code {
    private User user = new User();
    private Mentor mentorModel = new Mentor();
    private Mentee menteeModel = new Mentee();

    public enum ProfileType
    {
        Mentor,
        Mentee,
        Both
    }

    private ProfileType profileType;

    private bool isMentor => profileType == ProfileType.Mentor || profileType == ProfileType.Both;
    private bool isMentee => profileType == ProfileType.Mentee || profileType == ProfileType.Both;

    private async Task HandleValidSubmit()
    {
        await Api.Users.Create(user.FirstName, user.LastName, user.Email);

        if (profileType == ProfileType.Mentor || profileType == ProfileType.Both)
        {
            mentorModel.UserId = user.Id;
            await Api.Mentors.Create(mentorModel.UserId, mentorModel.Expertise, mentorModel.AvailableTimes);
        }

        if (profileType == ProfileType.Mentee || profileType == ProfileType.Both)
        {
            menteeModel.UserId = user.Id;
            await Api.Mentees.Create(menteeModel.UserId, menteeModel.Interests, menteeModel.PreferredTimes);
        }
        
        Nav.NavigateTo("/mentors");
    }
}


